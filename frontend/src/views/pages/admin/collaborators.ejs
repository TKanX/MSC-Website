<!DOCTYPE html>
<html lang="en">

<head>
  <%- include("../../components/head.ejs") %>
  <script src="/js/collaborator.js"></script>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>
  <script src="/js/components/map-selector.js"></script>
  <title>MSC Admin | Collaborators</title>
</head>

<body>
  <%- include("../../components/admin/sidebar.ejs") %>

  <main class="sm:ml-64 p-6">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-semibold">Collaborators</h1>
      <button onclick="openAddCollaboratorModal()" class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-400">Add Collaborator</button>
    </div>

    <!-- Collaborator table -->
    <div class="overflow-x-auto bg-gray-50 shadow-md rounded-lg mt-4">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-100">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500">Organization</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500">Country</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500">Leader</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500">Email</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500">Website</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500">Actions</th>
          </tr>
        </thead>
        <tbody id="collaborators-table" class="bg-white divide-y divide-gray-200">
          <tr class="border-b">
            <td class="px-6 py-4 text-sm text-gray-700" colspan="10">No collaborators found</td>
          </tr>
        </tbody>
      </table>
    </div>
  </main>

  <!-- Add/Edit Collaborator Modal -->
  <div id="collaborator-modal" class="z-50 fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 hidden">
    <div class="bg-white p-6 rounded-lg w-96">
      <h2 class="text-xl font-semibold mb-4" id="modal-title">Add Collaborator</h2>
      <input id="org-name" type="text" placeholder="Organization" class="w-full p-2 border rounded mb-2">
      <input id="country" type="text" placeholder="Country" class="w-full p-2 border rounded mb-2">
      <input id="leader" type="text" placeholder="Leader" class="w-full p-2 border rounded mb-2">
      <input id="email" type="email" placeholder="Email" class="w-full p-2 border rounded mb-2">
      <input id="website" type="text" placeholder="Website" class="w-full p-2 border rounded mb-2">

      <!-- Map Selector -->
      <button onclick="openMap()" class="w-full py-2 bg-green-600 text-white rounded mb-2">Select Location</button>
      <p id="selected-coordinates" class="text-sm text-gray-600">Latitude: -, Longitude: -</p>

      <div class="flex justify-between mt-4">
        <button onclick="saveCollaborator()" class="bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-400">Save</button>
        <button onclick="closeModal()" class="bg-gray-500 text-white px-3 py-1 rounded mr-2 hover:bg-gray-400">Cancel</button>
      </div>
    </div>
  </div>

  <div id="map-modal" class="z-50 fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 hidden">
    <div class="relative my-10 mx-auto p-5 w-4/5 bg-white rounded-lg">
      <h2>Select Location on Map</h2>
      <div id="map" class="h-[500px] w-full"></div>
      <div class="flex justify-between mt-3">
        <button onclick="confirmLocation()" class="bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-400">Confirm</button>
        <button onclick="closeMap()" class="bg-gray-500 text-white px-3 py-1 rounded mr-2 hover:bg-gray-400">Cancel</button>
      </div>
    </div>
  </div>

  <script>
    const collaborator = new Collaborator(app);
    const mapSelector = new MapSelector(document.getElementById("map-modal"), document.getElementById("map"), document.getElementById("coordinates"));

    let editingId = null;
    let collaboratorsData = {};

    // Function to load collaborators
    const loadCollaborators = async () => {
      const response = await collaborator.getCollaborators();
      const collaboratorsTable = document.getElementById("collaborators-table");
      if (response.status === "success" && response.data.length > 0) {
        collaboratorsData = response.data; // Store collaborators data globally
        collaboratorsTable.innerHTML = "";
        response.data.forEach(collaborator => {
          const collaboratorRow = document.createElement("tr");
          collaboratorRow.innerHTML = `
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">${collaborator.organization || "-"}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">${collaborator.country}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">${collaborator.leader}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">${collaborator.email}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">${collaborator.website || "-"}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
              <button onclick="openEditCollaboratorModal('${collaborator.id}')" class="bg-blue-500 text-white px-3 py-1 rounded mr-2 hover:bg-blue-400">Edit</button>
              <button onclick="deleteCollaborator('${collaborator.id}')" class="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-400">Delete</button>
            </td>
          `;
          collaboratorsTable.appendChild(collaboratorRow);
        });
      }
    };

    loadCollaborators();

    // Function to open add collaborator modal
    const openAddCollaboratorModal = () => {
      document.getElementById("collaborator-modal").classList.remove("hidden");
      document.getElementById("modal-title").innerText = "Add Collaborator";
      editingId = null;
    }

    // Function to close add collaborator modal
    const closeModal = () => {
      document.getElementById("collaborator-modal").classList.add("hidden");
    }

    // Function to open edit collaborator modal
    const openEditCollaboratorModal = (id) => {
      document.getElementById("collaborator-modal").classList.remove("hidden");
      document.getElementById("modal-title").innerText = "Edit Collaborator";
      const collaboratorData = collaboratorsData.find(collaborator => collaborator.id === Number(id));
      document.getElementById("org-name").value = collaboratorData.organization || "";
      document.getElementById("country").value = collaboratorData.country;
      document.getElementById("leader").value = collaboratorData.leader;
      document.getElementById("email").value = collaboratorData.email;
      document.getElementById("website").value = collaboratorData.website || "";
      document.getElementById("selected-coordinates").innerText = `Latitude: ${collaboratorData.latitude || "-"}, Longitude: ${collaboratorData.longitude || "-"}`;
      mapSelector.setMarker({
        lat: collaboratorData.latitude,
        lng: collaboratorData.longitude
      }, true);
      editingId = id;
    }

    // Function to open map modal
    const openMap = () => {
      mapSelector.openMapModal();
    }

    // Function to close map modal
    const closeMap = () => {
      mapSelector.closeMapModal();
    }

    // Function to confirm location on map
    const confirmLocation = () => {
      mapSelector.confirmLocation()
        .then(selectedLatLng => {
          document.getElementById("selected-coordinates").innerText = `Latitude: ${selectedLatLng.lat}, Longitude: ${selectedLatLng.lng}`;
        })
        .catch(error => console.error(error));
    }

    // Function to save collaborator
    const saveCollaborator = () => {
      mapSelector.confirmLocation()
        .then(async selectedLatLng => {
          const collaboratorData = {
            organization: document.getElementById("org-name").value || undefined,
            country: document.getElementById("country").value,
            leader: document.getElementById("leader").value,
            email: document.getElementById("email").value,
            website: document.getElementById("website").value || undefined,
            latitude: selectedLatLng.lat || undefined,
            longitude: selectedLatLng.lng || undefined
          };

          if (editingId) {
            const response = await collaborator.updateCollaborator(editingId, collaboratorData);
            if (response.status === "success") {
              app.ui.alert(response.message, "success");
              closeModal();
              loadCollaborators();
            } else {
              app.ui.alert(response.message, "error");
            }
          } else {
            const response = await collaborator.createCollaborator(collaboratorData);
            if (response.status === "success") {
              app.ui.alert(response.message, "success");
              closeModal();
              loadCollaborators();
            } else {
              app.ui.alert(response.message, "error");
            }
          }
        })
        .catch(error => console.error(error));
    }

    // Function to delete collaborator
    const deleteCollaborator = async (id) => {
      const response = await collaborator.deleteCollaborator(id);
      if (response.status === "success") {
        app.ui.alert(response.message, "success");
        loadCollaborators();
      } else {
        app.ui.alert(response.message, "error");
      }
    }
  </script>
</body>

</html>