<!DOCTYPE html>
<html lang="en">

<head>
  <%- include("../components/head.ejs") %>
  <%- include("../components/quilljs-head.ejs") %>
  <script src="/js/collaborator.js"></script>
  <meta name="description" content="Meet the collaborators all over the world of the Material and Process Simulation Center (MSC) at Caltech.">
  <title>MSC | Collaborators</title>
  <!-- Include Leaflet CSS and JS for OpenStreetMap -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
  <style>
    #map {
      height: 500px;
    }
  </style>
</head>

<body>
  <!-- Header Section -->
  <%- include("../components/main-header.ejs") %>

  <!-- Subheader Menu Section -->
  <section class="subheader-menu bg-background-200 p-4">
    <div class="max-w-7xl mx-auto flex justify-start items-center border-b-2 border-primary-500">
      <a href="/members" class="text-black font-semibold text-xl hover:text-primary-600 transition duration-300 mr-8">Current Members</a>
      <a href="/collaborators" class="text-primary-600 font-semibold text-xl transition duration-300">Collaborators</a>
    </div>
  </section>

  <!-- OpenStreetMap Section -->
  <section class="p-8 bg-gray-100">
    <div class="max-w-7xl mx-auto">
      <div id="map" class="w-full rounded-lg shadow-lg"></div>
    </div>
  </section>

  <!-- About Section -->
  <section class="p-8">
    <div class="max-w-7xl mx-auto">
      <h2 class="text-2xl font-semibold mb-6">About Our Collaborators</h2>
      <div id="collaborator-about" class="read-only bg-white rounded-lg p-6 shadow-lg">
        <!-- This will be the Quill.js container for rendering content -->
      </div>
    </div>
  </section>

  <!-- Collaborators Grid Section -->
  <section class="p-8">
    <div class="max-w-7xl mx-auto grid gap-6 sm:grid-cols-2 lg:grid-cols-3" id="collaborators-grid">
      <!-- Collaborator Card Template (Will be populated by JavaScript) -->
    </div>
  </section>

  <!-- Footer Section -->
  <%- include("../components/footer.ejs") %>

  <script>
    const collaborator = new Collaborator(app);

    // Initialize Quill.js for rendering content
    const collaboratorContents = new Quill("#collaborator-about", {
      modules: {
        syntax: true,
        toolbar: false,
      },
      theme: "bubble",
      readOnly: true
    });

    // Function to create collaborator card HTML
    const createCollaboratorCard = (collaborator) => {
      return `
        <div class="bg-white rounded-lg shadow-lg overflow-hidden transform transition duration-500 hover:scale-105">
          <div class="p-6">
            <h3 class="text-2xl font-semibold mb-2 text-center">${collaborator.organization}</h3>
            <p class="text-gray-700 mb-4 text-center">${collaborator.leader}</p>
            <div class="space-y-2">
              ${collaborator.email ? `<p class="flex items-center text-gray-700">
                <svg class="w-5 h-5 mr-2" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                  <path d="M4 39H44V24V9H24H4V24V39Z" fill="none" stroke="currentColor" stroke-width="4" stroke-linejoin="round" />
                  <path d="M4 9L24 24L44 9" stroke="currentColor" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" />
                  <path d="M24 9H4V24" stroke="currentColor" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" />
                  <path d="M44 24V9H24" stroke="currentColor" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <a href="mailto:${collaborator.email}" class="text-indigo-600 hover:underline">${collaborator.email}</a>
              </p>` : ''}
              ${collaborator.website ? `<p class="flex items-center text-gray-700">
                <svg class="w-5 h-5 mr-2" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                  <path d="M30 19H20C15.5817 19 12 22.5817 12 27C12 31.4183 15.5817 35 20 35H36C40.4183 35 44 31.4183 44 27C44 24.9711 43.2447 23.1186 42 21.7084" stroke="currentColor" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" />
                  <path d="M6 24.2916C4.75527 22.8814 4 21.0289 4 19C4 14.5817 7.58172 11 12 11H28C32.4183 11 36 14.5817 36 19C36 23.4183 32.4183 27 28 27H18" stroke="currentColor" stroke-width="4" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <a href="${collaborator.website}" class="text-indigo-600 hover:underline">${collaborator.website}</a>
              </p>` : ''}
              ${collaborator.country ? `<p class="flex items-center text-gray-700">
                <svg class="w-5 h-5 mr-2" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                  <path d="M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z" stroke="currentColor" stroke-width="4"/>
                  <path d="M4 20.8404C7.01485 19.4168 9.24466 19.2185 10.6894 20.2454C12.8566 21.7859 13.1283 28.064 18.0575 25.0635C22.9867 22.063 15.9467 20.8404 17.475 16.4939C19.0033 12.1474 24.0083 15.5237 24.5059 10.7627C24.8375 7.58862 21.0408 6.37413 13.1156 7.11921" stroke="currentColor" stroke-width="4"/>
                  <path d="M36.0001 8C30.2857 12.9886 28.2899 16.0011 30.0127 17.0373C32.5968 18.5917 33.6933 16.4033 36.8467 17.0373C40.0001 17.6714 39.3173 21.9457 37.6587 21.9457C36.0001 21.9457 27.41 20.8518 27.8427 25.865C28.2753 30.8781 33.4422 31.6203 33.4422 34.4211C33.4422 36.2883 32.299 39.146 30.0127 42.9942" stroke="currentColor" stroke-width="4" stroke-linecap="round"/>
                  <path d="M6.10449 32.9264C7.01598 32.5288 7.70115 32.2374 8.15999 32.052C12.0071 30.4978 14.8617 30.1314 16.7236 30.953C20.0161 32.4059 18.7503 35.3401 19.7816 36.4211C20.8128 37.5021 23.388 37.1876 23.388 39.244C23.388 40.615 22.9275 42.1637 22.0065 43.8901" stroke="currentColor" stroke-width="4" stroke-linecap="round"/>
                </svg>
                ${collaborator.country}
              </p>` : ''}
              ${collaborator.latitude && collaborator.longitude ? `<p class="flex items-center text-gray-700">
                <svg class="w-5 h-5 mr-2" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                  <path d="M24 44C24 44 39 32 39 19C39 10.7157 32.2843 4 24 4C15.7157 4 9 10.7157 9 19C9 32 24 44 24 44Z" fill="none" stroke="currentColor" stroke-width="4" stroke-linejoin="round"/>
                  <path d="M24 25C27.3137 25 30 22.3137 30 19C30 15.6863 27.3137 13 24 13C20.6863 13 18 15.6863 18 19C18 22.3137 20.6863 25 24 25Z" fill="none" stroke="currentColor" stroke-width="4" stroke-linejoin="round"/>
                </svg>
                ${collaborator.latitude.toFixed(2)}, ${collaborator.longitude.toFixed(2)}
              </p>` : ''}
            </div>
          </div>
        </div>
      `;
    };

    // Function to fetch and render collaborators
    const renderCollaborators = async () => {
      try {
        const response = await collaborator.getCollaborators();
        const collaboratorsGrid = document.getElementById('collaborators-grid');
        collaboratorsGrid.innerHTML = response.data.map(createCollaboratorCard).join('');
      } catch (error) {
        console.error('Error fetching collaborators:', error);
      }
    };

    // Function to fetch and render about collaborator section
    const renderAboutCollaborator = async () => {
      try {
        const response = await collaborator.getAboutCollaborator();
        const data = response.data;
        collaboratorContents.updateContents(data);
      } catch (error) {
        console.error('Error fetching about collaborator:', error);
      }
    };

    // Initialize map with OpenStreetMap
    const initializeMap = () => {
      const map = L.map('map').setView([20, 0], 2);

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
      }).addTo(map);

      // Add markers for each collaborator
      collaborator.getCollaborators().then(response => {
        response.data.forEach(collaborator => {
          if (collaborator.latitude && collaborator.longitude) {
            const marker = L.marker([collaborator.latitude, collaborator.longitude]).addTo(map);
            marker.bindPopup(`<b>${collaborator.organization}</b><br>${collaborator.country}<br><a href="${collaborator.website}" target="_blank">${collaborator.website}</a>`);
          }
        });
      }).catch(error => {
        console.error('Error fetching collaborators for map:', error);
      });
    };

    // Fetch and render collaborators and about section on page load
    document.addEventListener('DOMContentLoaded', () => {
      renderCollaborators();
      renderAboutCollaborator();
      initializeMap();
    });
  </script>
</body>

</html>